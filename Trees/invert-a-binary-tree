/**
 * Definition for a binary tree node.
 * class TreeNode {
 *     val: number
 *     left: TreeNode | null
 *     right: TreeNode | null
 *     constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {
 *         this.val = (val===undefined ? 0 : val)
 *         this.left = (left===undefined ? null : left)
 *         this.right = (right===undefined ? null : right)
 *     }
 * }
 */

function invertTree(root: TreeNode | null): TreeNode | null {
    if(root ==null) return root;

    let leftNode,rightNode;
    
    console.log(root.val,'root');
    console.log(root.left,'left');
    console.log(root.right,'right');
     
    leftNode = invertTree(root.left);
    
    rightNode= invertTree(root.right);
    
    root.left = rightNode;
    root.right=leftNode;
    
    return root;
};

//check if the root is null 
