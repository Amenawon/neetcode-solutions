/**
 * Definition for singly-linked list.
 * class ListNode {
 *     val: number
 *     next: ListNode | null
 *     constructor(val?: number, next?: ListNode | null) {
 *         this.val = (val===undefined ? 0 : val)
 *         this.next = (next===undefined ? null : next)
 *     }
 * }
 */
//time complexity=> O(n)
//space complexity=> O(1)

function mergeTwoLists(list1: ListNode | null, list2: ListNode | null): ListNode | null {
    let result = new ListNode();
    let temp = result;
    
    if(list1 ===  null && list2 ===  null){
        return null;
    }
    
    while(list1 !=null && list2 !=null){
        if(list1.val < list2.val){
            temp.next=list1;
            list1=list1.next;
        }else{
            temp.next=list2;
            list2=list2.next;
        }
        temp=temp.next;
    }
         
    if(list1 !=null){
      temp.next= list1;
    }
    else if(list2 !=null){
      temp.next= list2;
    }
    
    return result.next;
};
